<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Qlyfdljh&#39;s blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-07-03T16:27:03.503Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>里屿</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java语法</title>
    <link href="http://example.com/2022/07/04/Java%E8%AF%AD%E6%B3%95/"/>
    <id>http://example.com/2022/07/04/Java%E8%AF%AD%E6%B3%95/</id>
    <published>2022-07-03T16:26:35.000Z</published>
    <updated>2022-07-03T16:27:03.503Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Java语法"><a href="#Java语法" class="headerlink" title="Java语法"></a>Java语法</h3><h4 id="1-1-变量、运算符、输入输出"><a href="#1-1-变量、运算符、输入输出" class="headerlink" title="1.1 变量、运算符、输入输出"></a>1.1 变量、运算符、输入输出</h4><p>类似于<code>C#</code>，<code>Java</code>的所有变量和函数都要定义在<code>class</code>中。</p><h5 id="1-1-1-内置数据类型"><a href="#1-1-1-内置数据类型" class="headerlink" title="1.1.1 内置数据类型"></a>1.1.1 内置数据类型</h5><table><thead><tr><th>类型</th><th>字节数</th><th>举例</th></tr></thead><tbody><tr><td>byte</td><td>1</td><td>123</td></tr><tr><td>short</td><td>2</td><td>12345</td></tr><tr><td>int</td><td>4</td><td>123456789</td></tr><tr><td>long</td><td>8</td><td>1234567891011L</td></tr><tr><td>float</td><td>4</td><td>1.2F</td></tr><tr><td>double</td><td>8</td><td>1.2, 1.2D</td></tr><tr><td>boolean</td><td>1</td><td>true, false</td></tr><tr><td>char</td><td>2</td><td>‘A’</td></tr></tbody></table><hr><h5 id="1-1-2-常量"><a href="#1-1-2-常量" class="headerlink" title="1.1.2 常量"></a>1.1.2 常量</h5><p>使用<code>final</code>修饰：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">110</span>;</span><br></pre></td></tr></table></figure><hr><h5 id="1-1-3-类型转化"><a href="#1-1-3-类型转化" class="headerlink" title="1.1.3 类型转化"></a>1.1.3 类型转化</h5><ul><li>显示转化： <code>int x = (int)&#39;A&#39;;</code></li><li>隐式转化：<code>double x = 12, y = 4 * 3.3;</code></li></ul><hr><h5 id="1-1-4-表达式"><a href="#1-1-4-表达式" class="headerlink" title="1.1.4 表达式"></a>1.1.4 表达式</h5><p>与C++、Python3类似：</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>, b = <span class="number">2</span>, c = <span class="number">3</span>;</span><br><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> (a + b) * c;</span><br><span class="line">x ++;</span><br></pre></td></tr></table></figure><hr><h5 id="1-1-5-输入"><a href="#1-1-5-输入" class="headerlink" title="1.1.5 输入"></a>1.1.5 输入</h5><p>方式1，效率较低，输入规模较小时使用。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"><span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sc.next(); <span class="comment">// 读入下一个字符串</span></span><br><span class="line"><span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextInt(); <span class="comment">// 读入下一个整数</span></span><br><span class="line"><span class="type">float</span> <span class="variable">t</span> <span class="operator">=</span> sc.nextFloat(); <span class="comment">// 读入下一个单精度浮点数</span></span><br><span class="line"><span class="type">double</span> <span class="variable">z</span> <span class="operator">=</span> sc.nextDouble(); <span class="comment">// 读入下一个双精度浮点数</span></span><br><span class="line"><span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> sc.nextLine(); <span class="comment">// 读入下一行</span></span><br></pre></td></tr></table></figure><p>方式2，效率较高，输入规模较大时使用。注意需要抛出异常。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> br.readLine();</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h5 id="1-1-6-输出"><a href="#1-1-6-输出" class="headerlink" title="1.1.6 输出"></a>1.1.6 输出</h5><p>方式1，效率较低，输出规模较小时使用。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">System.out.println(<span class="number">123</span>);  <span class="comment">// 输出整数 + 换行</span></span><br><span class="line">System.out.println(<span class="string">&quot;Hello World&quot;</span>);  <span class="comment">// 输出字符串 + 换行</span></span><br><span class="line">System.out.print(<span class="number">123</span>);  <span class="comment">// 输出整数</span></span><br><span class="line">System.out.print(<span class="string">&quot;ljh\n&quot;</span>);  <span class="comment">// 输出字符串</span></span><br><span class="line">System.out.printf(<span class="string">&quot;%04d %.2f\n&quot;</span>, <span class="number">4</span>, <span class="number">123.456D</span>);  <span class="comment">// 格式化输出，float与double都用%f输出</span></span><br></pre></td></tr></table></figure><p>方式2，效率较高，输出规模较大时使用。注意需要抛出异常。</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">bw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(System.out));</span><br><span class="line">        bw.write(<span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line">        bw.flush();  <span class="comment">// 需要手动刷新缓冲区</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;Java语法&quot;&gt;&lt;a href=&quot;#Java语法&quot; class=&quot;headerlink&quot; title=&quot;Java语法&quot;&gt;&lt;/a&gt;Java语法&lt;/h3&gt;&lt;h4 id=&quot;1-1-变量、运算符、输入输出&quot;&gt;&lt;a href=&quot;#1-1-变量、运算符、输入输出&quot; class</summary>
      
    
    
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/06/26/hello-world/"/>
    <id>http://example.com/2022/06/26/hello-world/</id>
    <published>2022-06-26T11:16:59.973Z</published>
    <updated>2022-06-14T10:39:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>我的第一篇博客</title>
    <link href="http://example.com/2022/06/16/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
    <id>http://example.com/2022/06/16/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</id>
    <published>2022-06-16T14:33:27.000Z</published>
    <updated>2022-06-16T15:31:52.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Markdown-语法"><a href="#Markdown-语法" class="headerlink" title="Markdown 语法"></a>Markdown 语法</h1><h4 id="链接："><a href="#链接：" class="headerlink" title="链接："></a>链接：</h4><p>​这是一个链接<a href="http://qlyfdljh-blog.com/">我的博客</a></p><p>​<a href="http://qlyfdljh-blog.com/">http://qlyfdljh-blog.com/</a></p><h4 id="字体："><a href="#字体：" class="headerlink" title="字体："></a>字体：</h4><p><em>斜体</em></p><p><strong>粗体</strong></p><p><em><strong>粗斜体</strong></em></p><h4 id="分割线："><a href="#分割线：" class="headerlink" title="分割线："></a>分割线：</h4><hr><h4 id="删除线："><a href="#删除线：" class="headerlink" title="删除线："></a>删除线：</h4><p>​<del>这句话被删除了</del></p><h4 id="下划线："><a href="#下划线：" class="headerlink" title="下划线："></a>下划线：</h4><p>​<u>嘿嘿嘿</u></p><h4 id="脚注："><a href="#脚注：" class="headerlink" title="脚注："></a>脚注：</h4><p>​创建脚注格式类似这样[^脚注]。</p><p>​[^脚注]：是对文本的补充说明。</p><h4 id="代码块测试："><a href="#代码块测试：" class="headerlink" title="代码块测试："></a>代码块测试：</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Hello World ！&quot;</span>)</span><br></pre></td></tr></table></figure><p><code>Be happy every day！</code></p><h4 id="图片测试："><a href="#图片测试：" class="headerlink" title="图片测试："></a>图片测试：</h4><p><img src="https://img2.baidu.com/it/u=3660571040,1999579994&fm=253&fmt=auto&app=120&f=JPEG?w=628&h=500" alt="这是一张图片"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Markdown-语法&quot;&gt;&lt;a href=&quot;#Markdown-语法&quot; class=&quot;headerlink&quot; title=&quot;Markdown 语法&quot;&gt;&lt;/a&gt;Markdown 语法&lt;/h1&gt;&lt;h4 id=&quot;链接：&quot;&gt;&lt;a href=&quot;#链接：&quot; class=&quot;he</summary>
      
    
    
    
    
    <category term="markdown" scheme="http://example.com/tags/markdown/"/>
    
  </entry>
  
</feed>
